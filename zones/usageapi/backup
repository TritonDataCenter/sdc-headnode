#!/usr/bin/bash

unset LD_LIBRARY_PATH
PATH=/usr/bin:/usr/sbin
export PATH

if [[ $# != 2 ]]; then
  echo "Usage: $0 <zone_name> <target_directory>"
  exit 1
fi

ZONE=$1
TARGET_DIR=$2
ROLE="usageapi"

STAMP=$(date +'%F-%H-%M-%S-%Z')
BACKUP_VERSION="${ROLE}-${STAMP}"

CFG_FILE=/zones/${ZONE}/root/opt/smartdc/usageapi/config/config.json
DATA_DATASET=$(zfs list -H -o name | grep "${ZONE}/data$")

# We cannot backup if cannot find zone's data dataset:
if [[ -z $DATA_DATASET ]]; then
  echo "FATAL: Cannot find ${ROLE} data dataset"
  exit 103
fi

# Create dataset backup
echo "==> Creating snapshot of ${ROLE} data dataset"
zfs snapshot "$DATA_DATASET@${BACKUP_VERSION}" 2>&1
if [[ $? -gt 0 ]]; then
  echo "FATAL: Unable to snapshot data dataset"
  exit 104
fi

# Just in case, create the backup directory:
[[ ! -e "${TARGET_DIR}" ]] && mkdir -p ${TARGET_DIR}

# Create backup directory
echo "==> Creating backup directory '${TARGET_DIR}/${ROLE}'"
mkdir -p "${TARGET_DIR}/${ROLE}"

# Copy config file
echo "==> Saving config file from ${ROLE} zone"
cp $CFG_FILE ${TARGET_DIR}/${ROLE}
if [[ $? -ne 0 ]]; then
  echo "FATAL: Unable to backup config file"
  exit 105
fi

# Send the dataset snapshots:
echo "==> Saving data dataset"
zfs send "$DATA_DATASET@${BACKUP_VERSION}" \
    > "${TARGET_DIR}/${ROLE}/usageapi-data.zfs" 2>&1
if [[ $? -gt 0 ]]; then
    echo "FATAL: Unable to zfs send data dataset"
    exit 106
fi

echo "==> Removing temporary snapshot of ${ROLE} data dataset"
/usr/sbin/zfs destroy "$DATA_DATASET@${BACKUP_VERSION}"

exit 0

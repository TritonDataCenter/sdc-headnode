#!/usr/bin/bash

if [[ $# != 2 ]]; then
  echo "Usage: $0 <zone_name> <target_directory>"
  exit 1
fi

ZONE=$1
TARGET_DIR=$2
# We know the name of our app:
APP_NAME="${ZONE}"

# Just in case, create the backup directory:
if [[ ! -e "${TARGET_DIR}" ]]; then
  mkdir -p ${TARGET_DIR}
fi

DATA_DATASET=$(zfs list -H -o name|grep "${ZONE}\/${APP_NAME}-data$")
STAMP=$(date +'%F-%H-%M-%S-%Z')

BACKUP_VERSION="cadata-${STAMP}"

# We cannot backup if cannot find data dataset:
if [[ -z $DATA_DATASET ]]; then
  echo "FATAL: Cannot find '${APP_NAME}' data dataset"
  exit 103
fi

# Create data dataset backup
if [[ -z $(zfs list -t all -H -o name|grep "${APP_NAME}-data@${BACKUP_VERSION}$") ]]; then
  echo "==> Creating snapshot of '${APP_NAME}-data' dataset"
  /usr/sbin/zfs snapshot zones/${ZONE}/${APP_NAME}-data@${BACKUP_VERSION} 2>&1
  if [[ $? -gt 0 ]]; then
    echo "FATAL: Unable to snapshot data dataset"
    exit 106
  fi
fi

# Create backup directory for the zone stuff:
echo "==> Creating backup directory '${TARGET_DIR}/${APP_NAME}'"
mkdir -p "${TARGET_DIR}/${APP_NAME}"

# Send the dataset snapshots:

if [[ ! -f "${TARGET_DIR}/${APP_NAME}/${APP_NAME}-data" ]]; then
  echo "==> Saving data dataset"
  /usr/sbin/zfs send "zones/${ZONE}/${APP_NAME}-data@${BACKUP_VERSION}" > "${TARGET_DIR}/${APP_NAME}/${APP_NAME}-data.zfs" 2>&1
  if [[ $? -gt 0 ]]; then
    echo "Unable to zfs send data dataset"
    exit 108
  fi
fi

echo "==> Removing temporary snapshot of '${ZONE}'"
/usr/sbin/zfs destroy "zones/${ZONE}/${APP_NAME}-data@${BACKUP_VERSION}"

# Copy config file
cp /zones/$ZONE/root/opt/smartdc/etc/zoneconfig ${TARGET_DIR}/${APP_NAME}

# Create a file to hold the $BACKUP_VERSION for the restore script:
echo "${BACKUP_VERSION}" > "${TARGET_DIR}/${APP_NAME}/RESTORE"

echo "All done!!!"
exit 0

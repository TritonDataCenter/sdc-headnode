#!/bin/bash

set -e


if [[ -z "${CHECKOUT_TARGET}" ]]; then
    echo "error: cloudapi: no CHECKOUT_TARGET"
    exit 1
fi
echo "cloudapi target: [${CHECKOUT_TARGET}]"

mkdir -p root/opt/smartdc
cd root/opt/smartdc

# Get the repo.
if [[ -n "${CLOUDAPI_DIR}" ]]; then
    if [[ ! -d "${CLOUDAPI_DIR}" ]]; then
        echo "FATAL: ${CLOUDAPI_DIR} is not a directory"
        exit 1
    fi
    echo "Copying cloudapi repo from '${CLOUDAPI_DIR}'."
    # Note: CLOUDAPI_DIR must be a git repo (so git describe works).
    mkdir cloudapi
    (cd ${CLOUDAPI_DIR} && tar -cf - ./) | (cd cloudapi && tar -xf -)
    cd cloudapi
else
    git clone git@git.joyent.com:cloud-api.git cloudapi
    cd cloudapi
    git checkout ${CHECKOUT_TARGET}
fi


# Dir need to hold the SSL cert created in `setup`.
mkdir -p ssl

# Setup internal node_modules dep. 
mkdir -p node_modules
if [[ ! -d node_modules/sdc-clients ]]; then
    git clone git@git.joyent.com:node-sdc-clients.git node_modules/sdc-clients
fi

# Install NPM modules
npm install --node-version=0.4.9
if [[ $? != 0 ]]; then
    echo "[cloudapi] npm install failed"
    exit 1
fi
rm -rf .git .gitmodules .gitignore cfg/* tst Makefile docs/*.restdown tools

# SDCClients checkout
cd node_modules/sdc-clients
git checkout ${CHECKOUT_TARGET}
rm -rf .git .gitmodules .gitignore

# Back up to where we were (/opt/smartdc)
cd ../../../

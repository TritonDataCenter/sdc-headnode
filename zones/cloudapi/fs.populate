#!/bin/bash

set -e
set -x

# FIXME: Set this programmatically.

echo "cloudapi target: [${CHECKOUT_TARGET}]"

mkdir -p root/opt/smartdc
cd root/opt/smartdc

if [[ -n ${CLOUDAPI_DIR} ]]; then
    if [[ -d ${CLOUDAPI_DIR} ]]; then
        echo "taking cloudapi from ${CLOUDAPI_DIR}"
        # XXX CLOUDAPI_DIR must be a git repo (so git describe works)
        mkdir cloudapi
        (cd ${CLOUDAPI_DIR} && tar -cf - ./) | (cd cloudapi && tar -xf -)
    else
        echo "FATAL: ${CLOUDAPI_DIR} is not a directory"
        exit 1
    fi
else
    # cloud-api snubs the develop branch.
    TARGET=${CHECKOUT_TARGET}

    git clone git@git.joyent.com:cloud-api.git cloudapi
    cd cloudapi
    echo "testing git"
    git remote -v
    ls -laF .git
    git fetch -a origin
    git checkout ${TARGET} -b $(basename ${TARGET})

    mkdir -p ssl
    mkdir -p node_modules
    git clone git@git.joyent.com:node-sdc-clients.git node_modules/sdc-clients
    #git clone git@git.joyent.com:node-http-signing.git node_modules/http-signature

    echo ${TARGET} > VERSION
    git log ${TARGET} | head -1 | sed "s/[^\w]* //" >> VERSION

    # Install NPM modules
    npm install
    if [[ $? != 0 ]]; then
        echo "[cloudapi] npm install failed"
        exit 1
    fi
    rm -rf .git .gitmodules .gitignore cfg/* tst Makefile docs/*.restdown tools

    # SDCClients checkout
    cd node_modules/sdc-clients
    TARGET=${CHECKOUT_TARGET}

    if [[ ${TARGET} == "origin/develop" ]]; then
        TARGET=master
    fi

    git checkout ${TARGET}
    npm run-script postinstall
    echo ${TARGET} > VERSION
    git log ${TARGET} | head -1 | sed "s/[^\w]* //" >> VERSION
    rm -rf .git .gitmodules .gitignore

    # HttpSignature checkout
    # cd ../http-signature
    # git checkout ${TARGET}
    # echo ${TARGET} > VERSION
    # git log ${TARGET} | head -1 | sed "s/[^\w]* //" >> VERSION
    # rm -rf .git .gitmodules .gitignore

    # Back up to where we were (/opt/smartdc)
    cd ../../../
fi

#!/usr/bin/bash
#
# Copyright (c) 2011 Joyent Inc., All rights reserved.
#

if [[ $# != 2 ]]; then
    echo "Usage: $0 <zone_name> <src_directory>"
    exit 1
fi

ZONE=$1
SRC_DIR=$2
ROLE="portal"

ZONEPATH=`zonecfg -z $ZONE info zonepath | cut -d " " -f2`

BASE_DIR=$ZONEPATH/root/opt/smartdc/portal

# Older backups may not have backed up this role
if [[ -d "${SRC_DIR}/${ROLE}" && -f "${SRC_DIR}/${ROLE}/config.tar" ]]; then
    echo "==> Restoring config files for zone '${ZONE}'"

    cd $BASE_DIR
    tar xbf 512 ${SRC_DIR}/${ROLE}/config.tar

    # If we're restoring for an upgrade, then we may need to add some
    # missing config entries.
    CFG_FILE=$BASE_DIR/cfg/config.js

    egrep -s "extensionLocation" $CFG_FILE
    if [ $? != 0 ]; then
        nawk '{
            if ($1 != "siteThemeName") {
                print $0
                continue
            }

            # If siteThemeName is not the last entry, fatal
            if (substr($0, length($0), 1) == ",")
                exit 1

            # Append the new entries at the end of the config
            printf("%s,\n", $0)
            printf("  extensionLocation : \047./extensions/\047,\n")
            printf("  viewExtensionLocation : \047./extensions/views/\047,\n")
            printf("  googleAnalyticsCode : false\n")
        }' $CFG_FILE >/tmp/portal.$$

        if [ $? != 0 ]; then
            echo "Warning, unable to add new configuration entries for $ROLE"
        else
            cp /tmp/portal.$$ $CFG_FILE 
            rm -f /tmp/portal.$$
        fi
    fi
else
    echo "Warning, older backup; missing config files for $ROLE"
fi

echo "==> Done"
exit 0

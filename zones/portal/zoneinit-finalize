#!/bin/bash

echo "99 finalizing portal zone"

# node request package runs fine in npm, but here, we need to explicitly setup an index.js
# to map it to something plain node understands
if [ ! -e /opt/smartdc/portal/deps/request/index.js ]; then
    (cd /opt/smartdc/portal/deps/request; ln -s main.js index.js)
fi

# Update the config with the correct values.
cat > /opt/smartdc/portal/config.js <<HERE
exports.config = {
  displayCouponField : false,
  publicApiUrl : "http://${PUBLIC_API_PRIVATE_IP}:8080/v1",
  privateCAUrl : "http://${MAPI_API_PRIVATE_IP}:80",
  privateCAPIUrl : "http://${CAPI_API_PRIVATE_IP}:8080",
  CAPIuser : "admin",
  CAPIpassword : "tot@ls3crit",
  CAPIMetaCAKey : "portal-coal",
  CAPIMetaCABlessed : "blessed-instrumentation",
  defaultCAParams : { module : "node", stat : "httpd_ops", decomposition : "raddr" }
}
HERE

cat > /opt/smartdc/portal/smf_manifest.xml <<HERE
<?xml version="1.0"?>
<!DOCTYPE service_bundle SYSTEM "/usr/share/lib/xml/dtd/service_bundle.dtd.1">
<service_bundle type="manifest" name="portal">
  <service name="smartdc/site/portal" type="service" version="0.0.1">

    <create_default_instance enabled="true"/>
    <single_instance/>

    <dependency name="network" grouping="require_all" restart_on="error" type="service">
      <service_fmri value="svc:/milestone/network:default"/>
    </dependency>

    <dependency name="filesystem" grouping="require_all" restart_on="error" type="service">
      <service_fmri value="svc:/system/filesystem/local"/>
    </dependency>

    <exec_method
      type="method"
      name="start"
      exec="/usr/bin/node server.js"
      timeout_seconds="60">
      <method_context working_directory="/opt/smartdc/portal">
        <!-- <method_credential user="root" group="staff"/> -->
        <method_environment>
          <envvar name="PATH" value="/usr/local/bin:/opt/local/bin:/usr/bin:/usr/sbin:/bin"/>
          <envvar name="NODE_PATH" value="/opt/smartdc/portal/deps"/>
        </method_environment>
      </method_context>
    </exec_method>

    <exec_method type="method" name="restart" exec=":kill" timeout_seconds="60">
      <method_context working_directory="/opt/smartdc/portal">
        <!-- <method_credential user="root" group="staff"/> -->
      </method_context>
    </exec_method>

    <exec_method type="method" name="stop" exec=":kill -20" timeout_seconds="60">
      <method_context working_directory="/opt/smartdc/portal">
        <!-- <method_credential user="root" group="staff"/> -->
      </method_context>
    </exec_method>

    <property_group name="startd" type="framework">
      <propval name="duration" type="astring" value="child"/>
      <propval name="ignore_error" type="astring" value="core,signal"/>
    </property_group>

    <property_group name="application" type="application">

    </property_group>


    <stability value="Evolving"/>

    <template>
      <common_name>
        <loctext xml:lang="C">Portal daemon (node)</loctext>
      </common_name>
    </template>

  </service>

</service_bundle>
HERE

svccfg import /opt/smartdc/portal/smf_manifest.xml
svcadm enable smartdc/site/portal






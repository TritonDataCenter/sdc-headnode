#!/usr/bin/bash

fatal()
{
	printf "Error: %s\n" "$1" >/dev/stderr
	exit 1
}

# This generates the user script.  The output will be read into a json string
# and sent across to the compute node for execution inside the zone.
# Because this will be turned into a json string, we need to escape quotes (").

# This script will be run as /var/svc/mdata-user-script within zone
# The mdata:execute svc has a start timeout of 60 seconds, so we can't do
# any serious work, like installing a bunch of pkgs, since the method will
# timeout and restart.  We echo the real commands we want to execute into
# a file within the zone (/var/svc/worker) then run that in the background
# so the mdata:execute svc is happy.

role=riak

# We want the RIAK_COOKIE value from the config file
. /usbkey/zones/$role/zoneconfig

# Get the headnode riak zone IP addr
riak_hn_ip=`zlogin riak ifconfig riak0 | nawk '{if ($1 == "inet") print $2}'`
[ -z "$riak_hn_ip" ] && \
    fatal "unable to determine headnode riak zone's IP address"

# We want shell processing in this here-is body to expand variables.
cat << DONE
mkdir -p /opt/smartdc/etc
RIAK_COOKIE=$RIAK_COOKIE
echo RIAK_COOKIE=$RIAK_COOKIE >/opt/smartdc/etc/zoneconfig
echo export PATH=/opt/local/bin:/opt/local/sbin:/usr/bin:/usr/sbin >/var/svc/worker
DONE

for i in `cat /usbkey/zones/$role/pkgsrc`
do
	echo "echo pkgin -y install $i >>/var/svc/worker"
done

# Use quoted DONE to avoid any shell processing in this here-is body.
cat << 'DONE'
IPADDR=`ifconfig net0 | nawk '{if ($1 == \"inet\") print $2}'`
echo gsed -i -e s/127.0.0.1/$IPADDR/ /opt/local/etc/riak/app.config >>/var/svc/worker
echo s/riak@127.0.0.1/riak@$IPADDR/ >/var/svc/scmd
DONE

# We want shell processing in this here-is body to expand variables.
#
# Update RIAK node name and cluster cookie
# We use a sed cmd file here since there are two cmds and the cookie
# edit has embedded spaces which seems impossible to properly escape
# into the background command script.

# Update the riak project using sed.  The projmod command needs its
# -K option properly enclosed in quotes and it seems impossible to
# properly escape that into the background command script.
cat << DONE
echo s/setcookie riak/setcookie $RIAK_COOKIE/ >>/var/svc/scmd
echo gsed -i -f /var/svc/scmd /opt/local/etc/riak/vm.args >>/var/svc/worker
echo \"s/^riak:.*/riak:100:Riak default project:riak:riak:process.max-file-descriptor=(basic,4096,deny),(priv,65535,deny)/\" >>/var/svc/pcmd
echo gsed -i -f /var/svc/pcmd /etc/project >>/var/svc/worker
echo svccfg import /opt/local/share/smf/manifest/epmd.xml >>/var/svc/worker
echo svcadm enable -s epmd >>/var/svc/worker
echo sleep 2 >>/var/svc/worker
echo svccfg import /opt/local/share/smf/manifest/riak.xml >>/var/svc/worker
echo svcadm enable riak >>/var/svc/worker
echo sleep 5 >>/var/svc/worker
echo svcs riak >>/var/svc/worker
echo riak-admin join riak@$riak_hn_ip >>/var/svc/worker
/usr/bin/bash /var/svc/worker >/var/svc/worker.log 2>&1 &
DONE

#!/usr/bin/env node

var fs = require('fs'),
  path = require('path'),

loadNodeList = function(nodeFile) {
  var nodelist = {};

  if (path.normalize(nodeFile).charAt(0) != "/") {
    nodeFile = '/mnt/' + nodeFile;
  }

  loadAndFilter(nodeFile).forEach(function(ele, idx, arr) {
    e = ele.split(/\s+/);
    nodelist[e[0]] = e[1];
  });
  return nodelist
}

loadConfig = function(configFile) {
  var config = {};
  loadAndFilter(configFile).forEach(function(ele, idx, arr) {
    e = ele.split('=');
    config[e[0]] = e[1];
  });
  if (config.node_file) {
    config.nodes = loadNodeList(config.node_file);
  }

  return config;
}

dhcpConfig = function() {
  config.dhcp_bootfile = (config.coal && config.coal.toLowerCase()) === "true" ? "pxegrub" : "gpxe";
  return dhcpTemplate();
}

hostsConfig = function() {
  hosts = [];
  var keys = Object.keys(config.nodes);
  keys.forEach(function (ele, idx, arr) {
    h = new Host(ele, config.nodes[ele])
    hosts.push(h.toEntry());
  });
  hosts.push(""); 
  return hosts.join('\n');
}

Host = function(mac, ip, hostname) {
  this.mac = mac;
  this.ip = ip;
  this.hostname = hostname || this.mac.replace(/:/g,'-');
  fixedAddress = (this.ip ? " fixed-address " + this.ip + ";" : "");
  this.toEntry = function() {
    return [ "host " + this.hostname 
           , "{ hardware ethernet " + this.mac + ";" 
           , fixedAddress
           , "option grubmenu \"/" + this.hostname + "/menu.lst\"; }"
           ].join(' ');
  }
}
  
// filters comments and empty lines
function notEmpty(element, index, array) {
  return (element != "" && !(/^\s*#/.test(element)) );
}

// load a config file and filter out comments and empty lines
function loadAndFilter(configFile) {
  c = fs.readFileSync(configFile, 'utf8').split(/\n/); // i know, i know
  c = c.filter(notEmpty);
  return c
}

// no new line support :(
dhcpTemplate = function() { 
  var template = 
    [ "# this file has been auto generated"
    , "#"
    , "ddns-update-style none;"                               
    , "option domain-name \"" + config.dns_domain +"\";"
    , "option domain-name-servers " + config.dns_servers + ";"
    , "default-lease-time 6000;"                              
    , "max-lease-time 72000;"                                 
    , "omapi-port 7911;"                                      
    , ""                                                      
    , "get-lease-hostnames true;"                             
    , ""                                                      
    , "# For Solaris Jumpstart"                               
    , "option grubmenu code 150 = text;"                      
    , ""                                                      
    , "subnet " + config.admin_network + " netmask " + config.admin_netmask + " {"
    , "  option grubmenu \"/boot/grub/menu.lst\";"            
    , "  append dhcp-parameter-request-list 150;"             
    , "  range " + config.dhcp_range_start + " " + config.dhcp_range_end + ";"
    , "  option routers " + config.default_gateway + ";"
    , "  next-server " + config.dhcp_next_server + ";"
    , "  append dhcp-parameter-request-list 12;"              
    , "  filename " + config.dhcp_bootfile + ";"
    , "}"
    , ""                                                      
    , "use-host-decl-names on;"                               
    , "include \"/etc/dhcpd.hosts\";"                           
    , ""
    ].join('\n');
  return template;
}

var config = loadConfig('/mnt/config');

fs.writeFile('/zones/dhcpd/root/etc/dhcpd.hosts', hostsConfig(), function(err) {
  if (err) throw err;
});

fs.writeFile('/zones/dhcpd/root/etc/dhcpd.conf', dhcpConfig(), function(err) {
  if (err) throw err;
});


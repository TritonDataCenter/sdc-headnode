#!/usr/bin/env node

/*
 *
 * dhpconfig
 * this file will write several dhcp configuration files 
 * in the dhcpd zone:
 * /zones/dhcpd/root/etc/dhcpd.conf
 * /zones/dhcpd/root/etc/dhcpd.hosts
 * /zones/dhcpd/root/tftpboot/SOME:MAC:ADD:RES:S/menu.lst
 *
 */

var fs = require('fs'),
  path = require('path'),
  exec = require('child_process').exec;

loadConfig = function(callback) {
  exec('svcprop -p "joyentfs/usb_copy_path" svc:/system/filesystem/joyent',
    function(err, stdout, stderr) {
      configPath = stdout.split(/\n/)[0];
      var config = {nodes: []};

      loadAndFilter(configPath + '/config').forEach(function(ele, idx, arr) {
        e = ele.split('=');
        config[e[0]] = e[1];
      });
      
      if (config.node_file) {
        loadAndFilter(configPath + '/config.inc/' + config.node_file).forEach(function(ele, idx, arr) {
          e = ele.split(/\s+/);
          h = new Host(e[0], e[1]);
          config.nodes.push(h);
        });
      }
      
      if (callback) callback(err, config);
    }
  );
}

dhcpConfig = function(config) {
  config.dhcp_bootfile = (config.coal && config.coal.toLowerCase()) === "true" ? "pxegrub" : "gpxe";
  return dhcpTemplate(config);
}

hostsConfig = function(config) {
  hosts = [];
  config.nodes.forEach(function(ele, idx, arr) {
    hosts.push(h.toEntry());
  });
  hosts.push(""); 
  return hosts.join('\n');
}

Host = function(mac, ip, hostname) {
  this.mac = mac;
  this.ip = ip;
  this.hostname = hostname || mac.replace(/:/g,'-');
  fixedAddress = (this.ip ? " fixed-address " + this.ip + ";" : "");
  
  this.toEntry = function() {
    return [ "host " + this.hostname 
           , "{ hardware ethernet " + this.mac + ";" 
           , fixedAddress
           , "option grubmenu \"/" + this.hostname + "/menu.lst\"; }"
           ].join(' ');
  }
}
 
// filters comments and empty lines
function notEmpty(element, index, array) {
  return (element != "" && !(/^\s*#/.test(element)) );
}

// load a config file and filter out comments and empty lines
function loadAndFilter(file) {
  try {
    c = fs.readFileSync(file, 'utf8').split(/\n/); // i know, i know
    c = c.filter(notEmpty);
    return c;
  } 
  catch(err) {
    return [];
  }
}

writeGrubConfigs = function(config) {
  var kargs = "console=text,rabbitmq=" + config.rabbitmq + ",admin_nic=" + h.mac
  var kargs_debug = "prom_debug=true,map_debug=true,kbm_debug=true"
  var kernel = '/platform/i86pc/kernel/amd64/unix'
  var module = '/platform/i86pc/amd64/boot_archive'
  
  config.nodes.forEach(function(h, idx, arr) {
    var template = 
      [ "default=0"
      , "timeout=5"
      , "min_mem64 1024"
      , "color cyan/blue white/blue"
      , ""
      , "title Live 64-bit"
      , "kernel " + kernel + " -B " + kargs 
      , "module " + module
      , ""
      , "title Live 64-bit KMDB"
      , "  kernel " + kernel + " -k -B " + kargs + ',' + kargs_debug
      , "  module " + module
      , ""
      , "title Live 64-bit Debug"
      , "  kernel " + kernel + " -kdv -B " + kargs + ',' + kargs_debug
      , "  module " + module
      ].join('\n');
    
    var menupath = '/zones/dhcpd/root/tftpboot/' + h.hostname;
    path.exists(menupath, function(exists) {
    	if (!exists) {
    		fs.mkdirSync(menupath, 0775)
      } 
      fs.writeFile(menupath + '/menu.lst', template, function(err) {
      	if (err) throw err;
      });
    });
  });
}

// no new line support :(
dhcpTemplate = function(config) { 
  var template = 
    [ "# this file has been auto generated"
    , "#"
    , "ddns-update-style none;"                               
    , "option domain-name \"" + config.dns_domain +"\";"
    , "option domain-name-servers " + config.dns_servers + ";"
    , "default-lease-time 6000;"                              
    , "max-lease-time 72000;"                                 
    , "omapi-port 7911;"                                      
    , ""                                                      
    , "get-lease-hostnames true;"                             
    , ""                                                      
    , "# For Solaris Jumpstart"                               
    , "option grubmenu code 150 = text;"                      
    , ""                                                      
    , "subnet " + config.admin_network + " netmask " + config.admin_netmask + " {"
    , "  option grubmenu \"/boot/grub/menu.lst\";"            
    , "  append dhcp-parameter-request-list 150;"             
    , "  range " + config.dhcp_range_start + " " + config.dhcp_range_end + ";"
    , "  option routers " + config.default_gateway + ";"
    , "  next-server " + config.dhcp_next_server + ";"
    , "  append dhcp-parameter-request-list 12;"              
    , "  filename " + config.dhcp_bootfile + ";"
    , "}"
    , ""                                                      
    , "use-host-decl-names on;"                               
    , "include \"/etc/dhcpd.hosts\";"                           
    , ""
    ].join('\n');
  return template;
}


loadConfig(function (err, config) {
  fs.writeFile('/zones/dhcpd/root/etc/dhcpd.hosts', hostsConfig(config), function(err) {
    if (err) throw err;
  });
  fs.writeFile('/zones/dhcpd/root/etc/dhcpd.conf', dhcpConfig(config), function(err) {
    if (err) throw err;
  });
  writeGrubConfigs(config);
});

#!/bin/bash

if [[ -z "${MAPI_IP}" ]] || [[ -z "${MAPI_PW}" ]] || [[ -z "${PRIVATE_IP}" ]]; then
    echo "Must set MAPI_IP, MAPI_PW and PRIVATE_IP environment variables"
    exit 1
fi

cat > /opt/smartdc/booter/config.js <<CONFIG
exports.config = {
  mapiUrl  : "http://${MAPI_IP}:8080",
  user     : "admin",
  password : "${MAPI_PW}",
  listenIp : "0.0.0.0",
  tftpRoot : '/tftpboot',
  dhcpIp   : "${PRIVATE_IP}"
}
CONFIG

# Update the config with the correct values.

ETC="/opt/smartdc/booter/etc"
[ ! -d $ETC ] && mkdir -p $ETC

for SVC in dhcpd tftpd; do
    MANIFEST="${ETC}/${SVC}_manifest.xml"
    echo Creating manifest for service $SVC: $MANIFEST
    cat > ${MANIFEST} <<HERE
<?xml version="1.0"?>
<!DOCTYPE service_bundle SYSTEM "/usr/share/lib/xml/dtd/service_bundle.dtd.1">
<service_bundle type="manifest" name="${SVC}">
  <service name="smartdc/site/${SVC}" type="service" version="0.0.1">

    <create_default_instance enabled="true"/>
    <single_instance/>

    <dependency name="network" grouping="require_all" restart_on="error" type="service">
      <service_fmri value="svc:/milestone/network:default"/>
    </dependency>

    <dependency name="filesystem" grouping="require_all" restart_on="error" type="service">
      <service_fmri value="svc:/system/filesystem/local"/>
    </dependency>

    <exec_method
      type="method"
      name="start"
      exec="/usr/bin/node ${SVC}.js"
      timeout_seconds="60">
      <method_context working_directory="/opt/smartdc/booter">
        <!-- <method_credential user="root" group="staff"/> -->
        <method_environment>
          <envvar name="PATH" value="/usr/local/bin:/opt/local/bin:/usr/bin:/usr/sbin:/bin"/>
          <envvar name="NODE_PATH" value="/opt/smartdc/booter/deps"/>
        </method_environment>
      </method_context>
    </exec_method>

    <exec_method type="method" name="restart" exec=":kill" timeout_seconds="60">
      <method_context working_directory="/opt/smartdc/booter">
        <!-- <method_credential user="root" group="staff"/> -->
      </method_context>
    </exec_method>

    <exec_method type="method" name="stop" exec=":kill -20" timeout_seconds="60">
      <method_context working_directory="/opt/smartdc/booter">
        <!-- <method_credential user="root" group="staff"/> -->
      </method_context>
    </exec_method>

    <property_group name="startd" type="framework">
      <propval name="duration" type="astring" value="child"/>
      <propval name="ignore_error" type="astring" value="core,signal"/>
    </property_group>

    <property_group name="application" type="application">

    </property_group>


    <stability value="Evolving"/>

    <template>
      <common_name>
        <loctext xml:lang="C">booter daemon (node)</loctext>
      </common_name>
    </template>

  </service>

</service_bundle>
HERE
    echo Importing ${MANIFEST}
    svccfg import ${MANIFEST}
    echo Enablig service ${SVC}
    svcadm enable smartdc/site/${SVC}
done




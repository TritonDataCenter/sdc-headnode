#!/bin/bash

set -e

if [[ -z "${CHECKOUT_TARGET}" ]]; then
    echo "error: adminui: no CHECKOUT_TARGET"
    exit 1
fi
echo "adminui target: [${CHECKOUT_TARGET}]"

mkdir -p root/opt/smartdc
cd root/opt/smartdc
if [[ -n ${ADMINUI_DIR} ]]; then
    if [[ -d ${ADMINUI_DIR} ]]; then
        echo "taking adminui from ${ROOT}/${ADMINUI_DIR}"
        # XXX ADMINUI_DIR must be a git repo (so git describe works)
        mkdir adminui-repo
        (cd ${ADMINUI_DIR} && tar -cf - ./) | (cd adminui-repo && tar -xf -)
        cd adminui-repo
        mnfst_string="adminui-repo@"$(git name-rev --name-only HEAD)
    else
        echo "FATAL: ${ADMINUI_DIR} is not a directory"
        exit 1
    fi
else
    git clone git@git.joyent.com:mcp_api_admin.git -b $(basename ${CHECKOUT_TARGET}) adminui-repo
    cd adminui-repo
    git submodule update --init --recursive
    mnfst_string="adminui-repo@"${CHECKOUT_TARGET}
fi

mv caproxy ../
mv consoleproxy ../

# Remove all .git directories from the repo
find . -type d -name ".git" -exec echo {} \;

touch ../adminui-VERSION
git describe --tags > ../adminui-VERSION

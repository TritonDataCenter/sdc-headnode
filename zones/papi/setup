#!/usr/bin/bash
#
# Copyright (c) 2012 Joyent Inc., All rights reserved.
#

export PS4='[\D{%FT%TZ}] ${BASH_SOURCE}:${LINENO}: ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'
set -o xtrace

PATH=/opt/local/bin:/opt/local/sbin:/usr/bin:/usr/sbin

role=papi
app_name=$role
# Local SAPI manifests:
CONFIG_AGENT_LOCAL_MANIFESTS_DIRS=/opt/smartdc/$role
# This includes the fatal function and downloads and installs files.
source /var/svc/setup.common

# Cookie to identify this as a SmartDC zone and its role
mkdir -p /var/smartdc/$role

mkdir -p /opt/smartdc/$role/etc
/usr/bin/chown -R root:root /opt/smartdc

# Add build/node/bin and node_modules/.bin to PATH
echo "" >>/root/.profile
echo "export PATH=\$PATH:/opt/smartdc/$role/build/node/bin:/opt/smartdc/$role/node_modules/.bin" >>/root/.profile

PACKAGES_BOOTSTRAP=/opt/smartdc/$role/etc/packages.json

UFDS_ADMIN_UUID=$(json -f ${METADATA} ufds_admin_uuid)

echo "[" >> $PACKAGES_BOOTSTRAP

echo "Getting package information"
# packages=$(/usr/sbin/mdata-get packages)
PACKAGES=($(json -f ${METADATA} packages))
# name:ram:swap:disk:cap:nlwp:iopri:uuid
tLen=${#PACKAGES[@]}
let "lastestComma = $tLen - 1"

for (( i=0; i<${tLen}; i++ ));
do
  pkg=${PACKAGES[$i]}
  name=$(echo ${pkg} | cut -d ':' -f 1)
  uuid=$(echo ${pkg} | cut -d ':' -f 8)
  # TBD: Decide if default package should be configurable
  # (can be changed from adminui post setup).
  if [[ "${name}" == "sdc_128" ]]; then
    default='true'
  else
    default='false'
  fi

  echo "{
    \"uuid\": \"${uuid}\",
    \"active\": true,
    \"cpu_cap\": \"$(echo ${pkg} | cut -d ':' -f 5)\",
    \"default\": $default,
    \"max_lwps\": $(echo ${pkg} | cut -d ':' -f 6),
    \"max_physical_memory\": $(echo ${pkg} | cut -d ':' -f 2),
    \"max_swap\": $(echo ${pkg} | cut -d ':' -f 3),
    \"name\": \"${name}\",
    \"quota\": $(echo ${pkg} | cut -d ':' -f 4),
    \"vcpus\": 1,
    \"version\": \"1.0.0\",
    \"zfs_io_priority\": $(echo ${pkg} | cut -d ':' -f 7),
    \"owner_uuid\": \"${UFDS_ADMIN_UUID}\"
  }" >> $PACKAGES_BOOTSTRAP

  # Do not append a comma to the last element
  if [ "$i" -lt "$lastestComma" ]; then
    echo "," >> $PACKAGES_BOOTSTRAP
  fi

  # Cleanup variables before next loop iteration
  unset pkg
  unset name
  unset uuid
done

echo "]" >> $PACKAGES_BOOTSTRAP

/opt/smartdc/bin/configure || fatal "Failed to configure zone."

echo "Adding log rotation"
logadm -w papi -C 48 -s 100m -p 1h \
    /var/svc/log/smartdc-application-papi:default.log

touch /var/svc/setup_complete
echo "setup done"
(sleep 5; cp /var/svc/setup.log /var/svc/setup_init.log) &

exit 0

#!/bin/bash

set -e

dorebuild=0
if [[ $1 == "-r" ]]; then
    dorebuild=1
    CHECKOUT_TARGET=$(grep "^pubapi-repo" $RECIPE_FILE | cut -d ' ' -f 1 | cut -d '@' -f 2)
    checkout_sha=$(grep "^pubapi-repo" $RECIPE_FILE | cut -d ' ' -f 2)
fi

echo "pubapi target: [${CHECKOUT_TARGET}]"

mkdir -p root/opt/smartdc
cd root/opt/smartdc

if [[ -n ${PUBAPI_DIR} ]]; then
    if [[ -d ${PUBAPI_DIR} ]]; then
        echo "taking pubapi from ${PUBAPI_DIR}"
        # XXX PUBAPI_DIR must be a git repo (so git describe works)
        mkdir pubapi-repo
        (cd ${PUBAPI_DIR} && tar -cf - ./) | (cd pubapi-repo && tar -xf -)
        cd pubapi-repo
        mnfst_string="pubapi-repo@"$(git name-rev --name-only HEAD)
    else
        echo "FATAL: ${PUBAPI_DIR} is not a directory"
        exit 1
    fi
else
    git clone git@git.joyent.com:public_api.git pubapi-repo
    cd pubapi-repo
    git checkout -b $(basename ${CHECKOUT_TARGET}) ${CHECKOUT_TARGET}
    mnfst_string="pubapi-repo@"${CHECKOUT_TARGET}
fi

if [[ $dorebuild == 1 ]]; then
    git reset --hard ${checkout_sha}
else
    head_sha=$(cat .git/$(git symbolic-ref HEAD))
    echo ${mnfst_string}" "${head_sha} >> $RECIPE_FILE
fi

touch ../pubapi-VERSION
git describe --tags > ../pubapi-VERSION

#!/usr/bin/bash
#
# Copyright (c) 2011 Joyent Inc., All rights reserved.
#

set -o xtrace

PATH=/opt/nodejs/bin:/opt/local/bin:/opt/local/sbin:/usr/bin:/usr/sbin

eval $(cat /opt/smartdc/etc/zoneconfig)

echo "Creating SMF manifests"
cat > /opt/smartdc/ufds/cfg/ufds_manifest.xml <<HERE
<?xml version="1.0"?>
<!DOCTYPE service_bundle SYSTEM "/usr/share/lib/xml/dtd/service_bundle.dtd.1">
<service_bundle type="manifest" name="ufds">
  <service name="smartdc/site/ufds" type="service" version="7.0.0">

    <create_default_instance enabled="true"/>
    <single_instance/>

    <dependency name="network" grouping="require_all" restart_on="error" type="service">
      <service_fmri value="svc:/milestone/network:default"/>
    </dependency>

    <dependency name="filesystem" grouping="require_all" restart_on="error" type="service">
      <service_fmri value="svc:/system/filesystem/local"/>
    </dependency>

    <exec_method
      type="method"
      name="start"
      exec="/opt/nodejs/bin/node /opt/smartdc/ufds/main.js -f /opt/smartdc/ufds/cfg/config.json&amp;"
      timeout_seconds="60">
      <method_context working_directory="/opt/smartdc/ufds">
        <method_credential user="nobody" group="nobody" privileges="basic,net_privaddr"/>
        <method_environment>
          <envvar name="PATH" value="/opt/nodejs/bin:/usr/local/bin:/opt/local/bin:/usr/bin:/usr/sbin:/bin"/>
          <envvar name="LD_PRELOAD_32" value="/usr/lib/extendedFILE.so.1" />
        </method_environment>
      </method_context>
    </exec_method>

    <exec_method type="method" name="restart" exec=":kill" timeout_seconds="60">
      <method_context working_directory="/opt/smartdc/ufds" />
    </exec_method>

    <exec_method type="method" name="stop" exec=":kill" timeout_seconds="60">
      <method_context working_directory="/opt/smartdc/ufds" />
    </exec_method>

    <property_group name="startd" type="framework">
      <propval name="ignore_error" type="astring" value="core,signal"/>
    </property_group>

    <property_group name="application" type="application">

    </property_group>

    <stability value="Stable"/>

    <template>
      <common_name>
        <loctext xml:lang="C">UFDS daemon (ldapjs)</loctext>
      </common_name>
    </template>

  </service>

</service_bundle>
HERE

cat > /opt/smartdc/ufds/cfg/ufds_capi_manifest.xml <<HERE
<?xml version="1.0"?>
<!DOCTYPE service_bundle SYSTEM "/usr/share/lib/xml/dtd/service_bundle.dtd.1">
<service_bundle type="manifest" name="ufds-capi">
  <service name="smartdc/site/ufds-capi" type="service" version="7.0.0">

    <create_default_instance enabled="true"/>
    <single_instance/>

    <dependency name="network" grouping="require_all" restart_on="error" type="service">
      <service_fmri value="svc:/milestone/network:default"/>
    </dependency>

    <dependency name="filesystem" grouping="require_all" restart_on="error" type="service">
      <service_fmri value="svc:/system/filesystem/local"/>
    </dependency>

    <exec_method
      type="method"
      name="start"
      exec="/opt/nodejs/bin/node /opt/smartdc/ufds/capi.js -f /opt/smartdc/ufds/cfg/config.json&amp;"
      timeout_seconds="60">
      <method_context working_directory="/opt/smartdc/ufds">
        <method_credential user="nobody" group="nobody" privileges="basic,net_privaddr"/>
        <method_environment>
          <envvar name="PATH" value="/opt/nodejs/bin:/usr/local/bin:/opt/local/bin:/usr/bin:/usr/sbin:/bin"/>
          <envvar name="LD_PRELOAD_32" value="/usr/lib/extendedFILE.so.1" />
        </method_environment>
      </method_context>
    </exec_method>

    <exec_method type="method" name="restart" exec=":kill" timeout_seconds="60">
      <method_context working_directory="/opt/smartdc/ufds" />
    </exec_method>

    <exec_method type="method" name="stop" exec=":kill" timeout_seconds="60">
      <method_context working_directory="/opt/smartdc/ufds" />
    </exec_method>

    <property_group name="startd" type="framework">
      <propval name="ignore_error" type="astring" value="core,signal"/>
    </property_group>

    <property_group name="application" type="application">

    </property_group>

    <stability value="Stable"/>

    <template>
      <common_name>
        <loctext xml:lang="C">UFDS CAPI Interface daemon (node)</loctext>
      </common_name>
    </template>

  </service>

</service_bundle>
HERE

echo "Creating HAProxy config file"
cat > /opt/local/etc/haproxy.cfg <<HERE
global
        log 127.0.0.1 local0
        ulimit-n 65535
        user haproxy
        group haproxy
        daemon

defaults
        balance roundrobin
        timeout connect 400ms
        timeout client 1m
        timeout server 5m

listen riak_proxy 127.0.0.1:8098
HERE

# Add all Riak IPs
R=0
for i in $(echo "${RIAK_ADMIN_IPS}" | tr ',' ' ')
do
    echo "        server riak$R $i:8098 weight 1 minconn 5 maxconn 25 check" \
        >> /opt/local/etc/haproxy.cfg
    let R+=1
done


# Update config file
cp /opt/smartdc/ufds/cfg/config.json.in /opt/smartdc/ufds/cfg/config.json.in.orig
gsed -i -e "s/ROOTDN/$UFDS_LDAP_ROOT_DN/" /opt/smartdc/ufds/cfg/config.json.in
gsed -i -e "s/ROOTPW/$UFDS_LDAP_ROOT_PW/" /opt/smartdc/ufds/cfg/config.json.in
gsed -i -e "s/RIAK_IP/127.0.0.1/" /opt/smartdc/ufds/cfg/config.json.in
gsed -i -e "s/RIAK_PORT/8098/" /opt/smartdc/ufds/cfg/config.json.in
mv /opt/smartdc/ufds/cfg/config.json.in /opt/smartdc/ufds/cfg/config.json
mv /opt/smartdc/ufds/cfg/config.json.in.orig /opt/smartdc/ufds/cfg/config.json.in

echo "Importing ufds_manifest.xml"
/usr/sbin/svccfg import /opt/smartdc/ufds/cfg/ufds_manifest.xml

echo "Importing ufds_capi_manifest.xml"
/usr/sbin/svccfg import /opt/smartdc/ufds/cfg/ufds_capi_manifest.xml

echo "Enabling service haproxy"
/usr/sbin/svcadm disable haproxy
/usr/sbin/svcadm enable haproxy

sleep 1

echo "Enabling service ufds"
/usr/sbin/svcadm disable smartdc/site/ufds
/usr/sbin/svcadm enable smartdc/site/ufds

echo "Enabling service ufds-capi"
/usr/sbin/svcadm disable smartdc/site/ufds-capi
/usr/sbin/svcadm enable smartdc/site/ufds-capi

exit 0

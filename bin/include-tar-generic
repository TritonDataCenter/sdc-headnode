#!/bin/bash
#
# Copyright (c) 2010 Joyent Inc., All rights reserved.
#

PLATFORM=$(uname -s)
MNT_DIR="${ROOT}/mnt"
GZCAT="zcat"
[ -z "$IMG_TYPE" ] && IMG_TYPE="usb"
case "$PLATFORM" in
  Darwin)
    # sudo is no longer required on OSX builds
    SUCMD=''
    TAR=gnutar
    TAR_ROOT=""
    ;;
  SunOS)
    SUCMD='pfexec'
    TAR=gtar
    TAR_ROOT="--owner=root --group=root"
    ;;
  *)
    echo "Platform $PLATFORM not supported."
    exit 1
esac
USER=$(whoami)

function can_has_internets
{
    if ping -c 1 8.8.8.8 >/dev/null 2>&1 || ping -c 1 4.2.2.1 >/dev/null 2>&1; then
        return 0
    fi
    return 1
}

function version
{
    echo "==> Building with variables from include-tar-smartos"
}

function cleanup
{
    rm -rf /tmp/fs.*.$$
    rm -rf $STAGE
}

function unpack_image
{
    # nop
    true
}

function mount_image
{
    ${SUCMD} rm -rf ${MNT_DIR}
    mkdir -p ${MNT_DIR}
}

function create_output
{
    echo "==> Checking current GIT branch"
    branch_name="$(git symbolic-ref HEAD 2>/dev/null)" || branch_name="(unnamed branch)"     # detached HEAD
    branch_name=${branch_name##refs/heads/}

    if [[ -f ${ROOT}/cache/stage/private/root.password.${LIVEIMG_VERSION} ]]; then
        echo "==> Copying root.password"
        if [[ -e $ROOT/cache/root.password.${LIVEIMG_VERSION} ]]; then rm -f $ROOT/cache/root.password.${LIVEIMG_VERSION}; fi
        ${SUCMD} cp ${ROOT}/cache/stage/private/root.password.${LIVEIMG_VERSION} ${ROOT}/cache/root.password.${LIVEIMG_VERSION}
        ${SUCMD} chmod 400 ${ROOT}/cache/root.password.${LIVEIMG_VERSION}
    fi

    if [[ ${BUILD_TGZ} == "false" && ${TYPE} != "tar" ]]; then
        echo "==> Creating boot-${THIS_BUILDSTAMP}/"
        ${SUCMD} chown -R ${USER} ${MNT_DIR}
        mv $MNT_DIR $ROOT/boot-${THIS_BUILDSTAMP}
    else
        echo "==> Creating boot-${THIS_BUILDSTAMP}.tgz"
        ${SUCMD} chown -R ${USER} ${MNT_DIR}
        ${TAR} -zcf ${ROOT}/boot-${THIS_BUILDSTAMP}.tgz -C ${MNT_DIR} .
    fi
    rm -rf $MNT_DIR || true
}


#!/bin/bash
#
# Copyright (c) 2012 Joyent Inc., All rights reserved.
#
# Convenience wrapper for calling the Image API.
#

if [ "$TRACE" != "" ]; then
    export PS4='${BASH_SOURCE}:${LINENO}: ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'
    set -o xtrace
fi
set -o errexit
set -o pipefail



# Arguments.
verbose=0
if [ "$1" == "-v" ]; then
    shift
    verbose=1
fi
path=$1
if [[ -z "$path" ]]; then
    echo "error: no PATH argument given"
    echo ""
    echo "Usage:"
    echo "  sdc-imgapi [-v] PATH [EXTRA-CURL-ARGS]"
    echo ""
    echo "Environment Variables:"
    echo "  IMGAPI_URL      Base URL for IMGAPI server. Typically this"
    echo "                  is automatically determined."
    exit 1
fi
shift;


# Determine server URL.
if [[ -z "$IMGAPI_URL" && -f /lib/sdc/config.sh ]]; then
    source /lib/sdc/config.sh
    load_sdc_config

    if [[ -z ${CONFIG_imgapi_domain} ]]; then
        echo "error: Unable to find IP for imgapi. Is it installed?"
        exit 1
    fi

    IMGAPI_URL=http://${CONFIG_imgapi_domain}
fi
if [[ -z "$IMGAPI_URL" ]]; then
    echo "error: IMGAPI_URL envvar is not set and could not be determined"
    exit 1
fi

# Try to sniff out GetImageFile request and adjust
# CURL_ARGS and JSON usage accordingly.
IS_GETIMAGEFILE=no
if [[ "${path:(-5)}" == "/file" ]]; then
    if [[ -z $(echo "$@" | grep -- '-T') && -z $(echo "$@" | grep -- 'PUT') ]]; then
        IS_GETIMAGEFILE=yes
    fi
fi
CURL_ARGS="--connect-timeout 10 -sS"
# 'application/json' are wrong for GetImageFile. We also drop '-i'
# because otherwise the headers get in the way of doing this:
#       sdc-imgapi /images/$uuid/file -o foo.zfs.bz2
if [[ "$IS_GETIMAGEFILE" == "no" ]]; then
    # Technically this 'content-type:application/json' isn't right
    # for the AddImageFile endpoint, but it doesn't hurt.
    CURL_ARGS+=" -i -H accept:application/json -H content-type:application/json"
fi

# Note: the 'echo' doesn't show the real quoting of args.
[ "$verbose" == "1" ] && echo "# curl $CURL_ARGS --url $IMGAPI_URL$path $@" >&2
if [[ "$IS_GETIMAGEFILE" == "no" ]]; then
    curl $CURL_ARGS --url "$IMGAPI_URL$path" "$@" | json -q
else
    curl $CURL_ARGS --url "$IMGAPI_URL$path" "$@"
fi


{
  "name": "jsprim",
  "version": "0.3.0",
  "description": "utilities for primitive JavaScript types",
  "main": "./lib/jsprim.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/davepacheco/node-jsprim.git"
  },
  "dependencies": {
    "extsprintf": "1.0.0",
    "json-schema": "0.2.2",
    "verror": "1.3.3"
  },
  "engines": [
    "node >=0.6.0"
  ],
  "readme": "# jsprim: utilities for primitive JavaScript types\n\nThis module provides miscellaneous facilities for working with strings,\nnumbers, dates, and objects and arrays of these basic types.\n\n\n### deepCopy(obj)\n\nCreates a deep copy of a primitive type, object, or array of primitive types.\n\n\n### isEmpty(obj)\n\nReturns true if the given object has no properties and false otherwise.  This\nis O(1) (unlike `Object.keys(obj).length === 0`, which is O(N)).\n\n\n### forEachKey(obj, callback)\n\nLike Array.forEach, but iterates properties of an object rather than elements\nof an array.  Equivalent to:\n\n    for (var key in obj)\n            callback(key, obj[key]);\n\n\n### randElt(array)\n\nReturns an element from \"array\" selected uniformly at random.  If \"array\" is\nempty, throws an Error.\n\n\n### startsWith(str, prefix)\n\nReturns true if the given string starts with the given prefix and false\notherwise.\n\n\n### endsWith(str, suffix)\n\nReturns true if the given string ends with the given suffix and false\notherwise.\n\n\n### iso8601(date)\n\nConverts a Date object to an ISO8601 date string of the form\n\"YYYY-MM-DDTHH:MM:SS.sssZ\".  This format is not customizable.\n\n\n### validateJsonObject(schema, object)\n\nUses JSON validation (via JSV) to validate the given object against the given\nschema.  On success, returns null.  On failure, *returns* (does not throw) a\nuseful Error object.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/davepacheco/node-jsprim/issues"
  },
  "homepage": "https://github.com/davepacheco/node-jsprim",
  "_id": "jsprim@0.3.0",
  "_from": "jsprim@0.3.0"
}

#!/bin/bash
#
# Copyright (c) 2013, Joyent, Inc., All rights reserved.
#

PATH=/usr/bin:/usr/sbin:/image/usr/sbin:/opt/smartdc/bin:/smartdc/bin
export PATH

function fatal
{
    msg=$1

    echo "ERROR: ${msg}" >/dev/stderr
    exit 1
}

#
# post-upgrade only runs on headnodes.
#
[[ `sysinfo | json '["Boot Parameters"].headnode'` != "true" ]] && \
    fatal "this command can only be run on the headnode"

COMMIT=0
WRITABLE=0
while getopts "cw" opt
do
	case "$opt" in
		w)	WRITABLE=1;;
		c)	COMMIT=1;;
		*)	fatal "invalid option";;
	esac
done

if [[ $WRITABLE == 1 ]]; then
    zonename=`vmadm list -H -o uuid,tags.smartdc_role | \
        nawk '/cloudapi/{print $1}'`

    [[ -z "$zonename" ]] && fatal "no cloudapi zone"

    echo "Enabling read-write mode in cloudapi"

    cfgfile=/zones/$zonename/root/opt/smartdc/cloudapi/etc/cloudapi.cfg

    nawk '{
        if ($1 == "\"read_only\":")
             printf("    \"read_only\": false,\n")
        else
            print $0
    }' $cfgfile >$cfgfile.new
    cp $cfgfile $cfgfile.bak
    cp $cfgfile.new $cfgfile
    rm -f $cfgfile.new

    zlogin $zonename svcadm restart cloudapi
fi

if [[ $COMMIT == 1 ]]; then
    [ ! -d /var/usb_rollback ] && \
        fatal "nothing to commit: data does not exist"

    echo "-----------------------------------------------------------------"
    echo "Warning:
    echo "This command will commit the upgrade and prevent future rollback.
    echo "-----------------------------------------------------------------"
    echo -n "Enter 'y' to continue: "
    read val
    [[ "$val" != "y" ]] && exit 0

    # Enable the new zfs features that we know about
    zpool set feature@async_destroy=enabled zones
    zpool set feature@empty_bpobj=enabled zones
    zpool set feature@lz4_compress=enabled zones
    zpool set feature@filesystem_limits=enabled zones
    zfs set compression=lz4 zones/cores

    for i in `zfs list -o name -H -t snapshot | egrep "rollback$"`
    do
        zfs destroy $i
    done

    for i in `zfs list -o name -H | egrep "_rollback$"`
    do
        zfs destroy -r $i
    done

    zfs destroy -r zones/pre-upgrade

    rm -rf /var/usb_rollback

    zpool upgrade zones
fi

exit 0
